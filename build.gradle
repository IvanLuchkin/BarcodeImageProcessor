plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'application'
    id 'edu.sc.seis.launch4j' version '2.4.9'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id "org.beryx.runtime" version "1.12.1"
}

group = 'BIP'
version = '1.9'
description = 'bip'
mainClassName = 'Launcher'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: 'org.openjfx.javafxplugin'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url = uri('https://repo1.maven.org/maven2/com/google/zxing/javase/3.4.1/javase-3.4.1.jar')
    }
}

sourceCompatibility = 15
targetCompatibility = 15

java {
    modularity.inferModulePath = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

javafx {
    version = "15"
    modules = ['javafx.controls', 'javafx.base', 'javafx.graphics', 'javafx.fxml',
               'javafx.swing', 'javafx.media', 'javafx.web']
}

dependencies {
    implementation 'org.apache.commons:commons-imaging:1.0-alpha1'
    implementation 'com.google.zxing:javase:3.4.1'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'org.controlsfx:controlsfx:9.0.0'
    implementation 'org.openjfx:javafx:15'

    compile 'org.openjfx:javafx-base:15'
    compile 'org.openjfx:javafx-graphics:15'
    compile 'org.openjfx:javafx-controls:15'
    compile 'org.openjfx:javafx-fxml:15'
    compile 'org.openjfx:javafx-swing:15'
    compile 'org.openjfx:javafx-media:15'
    compile 'org.openjfx:javafx-web:15'
    compile 'org.controlsfx:controlsfx:9.0.0'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' '),
                'Main-Class': 'Launcher'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

launch4j {
    mainClassName = 'Launcher'
    bundledJrePath = 'C:\\Users\\User\\.jdks\\openjdk-15.0.2'
    bundledJre64Bit = true
    jreMinVersion = 15
    bundledJreAsFallback = false
    jdkPreference = 'jdkOnly'
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

}

tasks.runtime.doLast {
    copy {
        from('src/main/resources')
        into("$buildDir/image/bin")
    }
}
