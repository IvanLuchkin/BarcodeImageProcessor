name: Release BarcodeImageProcessor

on:
  push:
    tags:
      - v*
  pull_request:
    branches: [ master ]

jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2
        with:
          name: 'BarcodeImageProcessor-${{env.VERSION}}.jar'
          path: 'build/libs/*.jar'

      - name: 'Create Release'

        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          body: |
            Initial release
          draft: false
          prerelease: false
      - name: 'Upload Release Asset'

        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: build/libs/BarcodeImageProcessor-${{env.VERSION}}.jar
          asset_name: BarcodeImageProcessor-${{env.VERSION}}.jar
          asset_content_type: application/java-archive
      - name: 'Write Upload URL To File'

        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt

      - name: 'Publish Upload URL'

        uses: actions/upload-artifact@v2
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

  build-macos-image:
    needs: [build-jar-job]
    name: 'Build macOS Image'
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '20.1.0.java8'
      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2
        with:
          name: 'BarcodeImageProcessor-${{env.VERSION}}.jar'
          path: ./
      - name: 'Get Release URL'

        uses: actions/download-artifact@v2
        with:
          name: 'upload_url.txt'
      - name: 'Get Upload URL'

        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
      - name: 'Build Mac OS Image'
        run: |
          native-image --no-server --allow-incomplete-classpath --no-fallback -H:+TraceClassInitialization -H:+ReportExceptionStackTraces -jar BarcodeImageProcessor-${{env.VERSION}}.jar
      - name: 'Publish Mac OS Image'
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: 'BarcodeImageProcessor-${{env.VERSION}}-macOS'
          path: ./
      - name: 'Upload Mac OS Image Asset'
        if: ${{ success() }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_name: BarcodeImageProcessor-${{env.VERSION}}-macOS
          asset_path: BarcodeImageProcessor-${{env.VERSION}}
          asset_content_type: application/octet-stream

  build-windows-image:
    needs: [build-jar-job]
    name: 'Build Windows Image'
    runs-on: windows-2016
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1
      - name: 'Download GraalVM'
        run: |
          Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java8-windows-amd64-20.1.0.zip -OutFile 'graal.zip'
      - name: 'Install GraalVM'
        run: |
          Expand-Archive -path 'graal.zip' -destinationpath '.'
      - name: 'Install Native Image'
        run: |
          graalvm-ce-java8-20.1.0\bin\gu.cmd install native-image
      - name: Uninstall Installed MS VC++ Redistributables
        shell: powershell
        run: |
          $apps = Get-WmiObject -Class Win32_Product -Filter "Name LIKE 'Microsoft Visual C++ 20%% Redistributable%'"
          foreach ($app in $apps) {
            echo $app
            $app.Uninstall()
          }
      - name: 'Set up Visual C Build Tools Workload for Visual Studio 2010 Build Tools'
        run: |
          choco install -d --no-progress windows-sdk-7.1 kb2519277
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
        shell: bash
      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2
        with:
          name: 'BarcodeImageProcessor-${{env.VERSION}}.jar'
          path: ./

      - name: 'Build Native Image'
        shell: cmd
        env:
          JAVA_HOME: ./graalvm-ce-java8-20.1.0
        run: |
          call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd"
          ./graalvm-ce-java8-20.1.0/bin/native-image --no-server --no-fallback --initialize-at-build-time=com.github.jaiimageio.impl.common.PackageUtil -H:Name=BarcodeImageProcessor-${{env.VERSION}} --allow-incomplete-classpath -jar BarcodeImageProcessor-${{env.VERSION}}.jar
      - name: 'Get Release URL'

        uses: actions/download-artifact@v2
        with:
          name: 'upload_url.txt'
      - name: 'Get Upload URL'

        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
        shell: bash
      - name: 'Publish Windows Image'
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: 'BarcodeImageProcessor-${{env.VERSION}}-windows.exe'
          path: ./*.exe
      - name: 'Release Windows Image Asset'

        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: BarcodeImageProcessor-${{env.VERSION}}-windows.exe
          asset_path: BarcodeImageProcessor-${{env.VERSION}}.exe
          asset_content_type: application/octet-stream
